#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres
GCOV = gcov
LCOV = lcov
GENHTML = genhtml


INC = -Iunity -Ifakes
CFLAGS = -Wall -ftest-coverage -fprofile-arcs --coverage
RESINC =
LIBDIR =
LIB =
LDFLAGS = -ftest-coverage -fprofile-arcs --coverage

INC_DEBUG = $(INC)
CFLAGS_DEBUG = $(CFLAGS) -g -DPOLLED_TIMER_TEST
RESINC_DEBUG = $(RESINC)
RCFLAGS_DEBUG = $(RCFLAGS)
LIBDIR_DEBUG = $(LIBDIR)
LIB_DEBUG = $(LIB)
LDFLAGS_DEBUG = $(LDFLAGS)
OBJDIR_DEBUG = obj/debug
DEP_DEBUG =
OUT_DEBUG = bin/debug/polled_timer_test
OUT_COVERAGE = coverage

INC_RELEASE = $(INC)
CFLAGS_RELEASE = $(CFLAGS) -O2
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR)
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE = $(LDFLAGS) -s
OBJDIR_RELEASE = obj/release
DEP_RELEASE =
OUT_RELEASE = bin/release/polled_timer_test

OBJ_DEBUG = $(OBJDIR_DEBUG)/polled_timer.o $(OBJDIR_DEBUG)/polled_timer_test.o $(OBJDIR_DEBUG)/main.o $(OBJDIR_DEBUG)/fakes/monotonic_time.o $(OBJDIR_DEBUG)/unity/unity.o

OBJ_RELEASE = $(OBJDIR_RELEASE)/polled_timer.o $(OBJDIR_RELEASE)/polled_timer_test.o $(OBJDIR_RELEASE)/main.o $(OBJDIR_RELEASE)/fakes/monotonic_time.o $(OBJDIR_RELEASE)/unity/unity.o

all: debug release

clean: clean_debug clean_release clean_coverage

coverage: debug
	$(OUT_DEBUG)
	$(GCOV) -o $(OBJDIR_DEBUG) main.c polled_timer.c polled_timer_test.c
	$(LCOV) -c -d $(OBJDIR_DEBUG) -o coverage.info
	$(GENHTML) coverage.info -o $(OUT_COVERAGE)


before_debug:
	test -d bin/debug || mkdir -p bin/debug
	test -d $(OBJDIR_DEBUG) || mkdir -p $(OBJDIR_DEBUG)
	test -d $(OBJDIR_DEBUG)/unity || mkdir -p $(OBJDIR_DEBUG)/unity
	test -d $(OBJDIR_DEBUG)/fakes || mkdir -p $(OBJDIR_DEBUG)/fakes

after_debug:

debug: before_debug out_debug after_debug

out_debug: before_debug $(OBJ_DEBUG) $(DEP_DEBUG)
	$(LD) $(LIBDIR_DEBUG) -o $(OUT_DEBUG) $(OBJ_DEBUG)  $(LDFLAGS_DEBUG) $(LIB_DEBUG)

$(OBJDIR_DEBUG)/polled_timer.o: polled_timer.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c polled_timer.c -o $(OBJDIR_DEBUG)/polled_timer.o

$(OBJDIR_DEBUG)/polled_timer_test.o: polled_timer_test.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c polled_timer_test.c -o $(OBJDIR_DEBUG)/polled_timer_test.o

$(OBJDIR_DEBUG)/main.o: main.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c main.c -o $(OBJDIR_DEBUG)/main.o

$(OBJDIR_DEBUG)/fakes/monotonic_time.o: fakes/monotonic_time.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c fakes/monotonic_time.c -o $(OBJDIR_DEBUG)/fakes/monotonic_time.o

$(OBJDIR_DEBUG)/unity/unity.o: unity/unity.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c unity/unity.c -o $(OBJDIR_DEBUG)/unity/unity.o

clean_debug:
	rm -f $(OBJ_DEBUG) $(OUT_DEBUG)
	rm -rf bin/debug
	rm -rf $(OBJDIR_DEBUG)
	rm -rf $(OBJDIR_DEBUG)/unity

before_release:
	test -d bin/release || mkdir -p bin/release
	test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE)
	test -d $(OBJDIR_RELEASE)/unity || mkdir -p $(OBJDIR_RELEASE)/unity
	test -d $(OBJDIR_RELEASE)/fakes || mkdir -p $(OBJDIR_RELEASE)/fakes

after_release:

release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(LD) $(LIBDIR_RELEASE) -o $(OUT_RELEASE) $(OBJ_RELEASE) $(LDFLAGS_RELEASE) $(LIB_RELEASE)

$(OBJDIR_RELEASE)/polled_timer.o: polled_timer.c polled_timer.h Makefile
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c polled_timer.c -o $(OBJDIR_RELEASE)/polled_timer.o

$(OBJDIR_RELEASE)/polled_timer_test.o: polled_timer_test.c polled_timer_test.h fakes/monotonic_time.h polled_timer.h Makefile
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c polled_timer_test.c -o $(OBJDIR_RELEASE)/polled_timer_test.o

$(OBJDIR_RELEASE)/main.o: main.c fakes/monotonic_time.h polled_timer_test.h Makefile
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c main.c -o $(OBJDIR_RELEASE)/main.o

$(OBJDIR_RELEASE)/fakes/monotonic_time.o: fakes/monotonic_time.c fakes/monotonic_time.h Makefile
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c fakes/monotonic_time.c -o $(OBJDIR_RELEASE)/fakes/monotonic_time.o

$(OBJDIR_RELEASE)/unity/unity.o: unity/unity.c unity/*.h
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c unity/unity.c -o $(OBJDIR_RELEASE)/unity/unity.o

clean_release:
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf bin/release
	rm -rf $(OBJDIR_RELEASE)
	rm -rf $(OBJDIR_RELEASE)/unity

clean_coverage:
	rm -rf $(OUT_COVERAGE)
	rm -f *.gcov
	rm -f coverage.info

.PHONY: before_debug after_debug clean_debug before_release after_release clean_release coverage

